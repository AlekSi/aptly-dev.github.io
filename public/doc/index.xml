<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Docs on aptly - Debian repository management tool </title>
      <generator uri="https://hugo.spf13.com">Hugo</generator>
    <link>http://www.aptly.info/doc/index.xml</link>
    <language>en-us</language>
    <author>Andrey Smirnov</author>
    
    <updated>Fri, 29 Aug 2014 11:17:38 UTC</updated>
    
    <item>
      <title>aptly package search</title>
      <link>http://www.aptly.info/doc/aptly/package/search</link>
      <pubDate>Fri, 29 Aug 2014 11:17:38 UTC</pubDate>
      <author>Andrey Smirnov</author>
      <guid>http://www.aptly.info/doc/aptly/package/search</guid>
      <description>

&lt;h2 id=&#34;toc_0&#34;&gt;aptly package search&lt;/h2&gt;

&lt;p&gt;Search whole package database for packages matching query.
Whole database of packages includes all packages (deduplicated)
from all the mirrors, local repos and snapshots.&lt;/p&gt;

&lt;p&gt;In order to get more detailed information about the package,
use &lt;a href=&#34;/doc/aptly/package/show/&#34;&gt;&lt;code&gt;aptly package show&lt;/code&gt;&lt;/a&gt; command.&lt;/p&gt;

&lt;p&gt;Usage:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ aptly package search &amp;lt;package-query&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Params are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;package-query&lt;/code&gt; is a &lt;a href=&#34;/doc/feature/query/&#34;&gt;package query&lt;/a&gt; to
search for packages&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ aptly package search &#39;Version (&amp;gt;=1.2.3-2), Version (&amp;lt;1.2.3-3)&#39;
libibmad-dev_1.2.3-20090314-1.1_amd64
libibumad-dev_1.2.3-20090314-1.1_i386
libibumad1_1.2.3-20090314-1.1_amd64
libibumad1_1.2.3-20090314-1.1_i386
libghc-uuid-dev_1.2.3-2+b3_amd64
python-mysqldb_1.2.3-2_i386
libibumad-dev_1.2.3-20090314-1.1_amd64
libibmad_1.2.3-20090314-1.1_source
python-mysqldb_1.2.3-2_amd64
jpegoptim_1.2.3-2+b2_i386
libghc-uuid-doc_1.2.3-2_all
libjibx1.2-java-doc_1.2.3-2_all
bwbar_1.2.3-2_amd64
libghc-certificate-doc_1.2.3-2_all
haskell-certificate_1.2.3-2_source
bwbar_1.2.3-2_i386
jpegoptim_1.2.3-2_source
libghc-certificate-dev_1.2.3-2_amd64
libibmad1_1.2.3-20090314-1.1_i386
libibmad-dev_1.2.3-20090314-1.1_i386
libjibx1.2-java_1.2.3-2_source
python-mysqldb-dbg_1.2.3-2_i386
shush_1.2.3-2_i386
moksha.common_1.2.3-2~bpo70+1_source
libghc-certificate-prof_1.2.3-2_i386
libghc-uuid-prof_1.2.3-2+b3_amd64
libghc-uuid-prof_1.2.3-2+b4_i386
shush_1.2.3-2_source
libghc-certificate-prof_1.2.3-2_amd64
libjibx1.2-java_1.2.3-2_all
libjibx-java_1.2.3-2_all
libghc-uuid-dev_1.2.3-2+b4_i386
python-mysqldb_1.2.3-2_source
haskell-uuid_1.2.3-2_source
libibumad_1.2.3-20090314-1.1_source
libghc-certificate-dev_1.2.3-2_i386
jpegoptim_1.2.3-2+b2_amd64
python-moksha.common_1.2.3-2~bpo70+1_all
bwbar_1.2.3-2_source
python-mysqldb-dbg_1.2.3-2_amd64
libibmad1_1.2.3-20090314-1.1_amd64
shush_1.2.3-2_amd64
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>aptly snapshot search</title>
      <link>http://www.aptly.info/doc/aptly/snapshot/search</link>
      <pubDate>Fri, 29 Aug 2014 11:17:38 UTC</pubDate>
      <author>Andrey Smirnov</author>
      <guid>http://www.aptly.info/doc/aptly/snapshot/search</guid>
      <description>

&lt;h2 id=&#34;toc_0&#34;&gt;aptly snapshot search&lt;/h2&gt;

&lt;p&gt;Search snapshot for packages matching query.&lt;/p&gt;

&lt;p&gt;Usage:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ aptly snapshot search &amp;lt;name&amp;gt; &amp;lt;package-query&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Params are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;name&lt;/code&gt; is snapshot name which has been given during snapshot
creation&lt;/li&gt;
&lt;li&gt;&lt;code&gt;package-query&lt;/code&gt; is a &lt;a href=&#34;/doc/feature/query/&#34;&gt;package query&lt;/a&gt; to
search for packages&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Flags:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-with-deps=false&lt;/code&gt;: include dependencies of matching packages
into search results&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ aptly snapshot search backports &#39;nginx, !Name (% *-light)&#39;
nginx_1.6.0-1~bpo70+1_all
nginx-full_1.6.0-1~bpo70+1_amd64
nginx-extras_1.6.0-1~bpo70+1_i386
nginx-extras_1.6.0-1~bpo70+1_amd64
nginx-full_1.6.0-1~bpo70+1_i386
nginx-naxsi_1.6.0-1~bpo70+1_amd64
nginx-naxsi_1.6.0-1~bpo70+1_i386
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>aptly repo search</title>
      <link>http://www.aptly.info/doc/aptly/repo/search</link>
      <pubDate>Fri, 29 Aug 2014 11:17:38 UTC</pubDate>
      <author>Andrey Smirnov</author>
      <guid>http://www.aptly.info/doc/aptly/repo/search</guid>
      <description>

&lt;h2 id=&#34;toc_0&#34;&gt;aptly repo search&lt;/h2&gt;

&lt;p&gt;Search local repositories for packages matching query.&lt;/p&gt;

&lt;p&gt;Usage:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ aptly repo search &amp;lt;name&amp;gt; &amp;lt;package-query&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Params are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;name&lt;/code&gt; packages would be removed from this local repository&lt;/li&gt;
&lt;li&gt;&lt;code&gt;package-query&lt;/code&gt; is a &lt;a href=&#34;/doc/feature/query/&#34;&gt;package query&lt;/a&gt; to
search for packages&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Flags:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-with-deps=false&lt;/code&gt;: include dependencies of matching packages
into search results&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ aptly repo search internal-pkg &#39;Version (&amp;gt;= 4.5)&#39;
libtinfo5_5.9-10_i386
perl-base_5.14.2-21+deb7u1_amd64
ncurses-base_5.9-10_all
xz-utils_5.1.1alpha+20120614-2_i386
gcc-4.7-base_4.7.2-5_amd64
libtinfo5_5.9-10_amd64
base-files_7.1wheezy5_i386
ncurses-bin_5.9-10_i386
xz-utils_5.1.1alpha+20120614-2_amd64
liblzma5_5.1.1alpha+20120614-2_i386
coreutils_8.13-3.5_amd64
liblzma5_5.1.1alpha+20120614-2_amd64
libncurses5_5.9-10_amd64
coreutils_8.13-3.5_i386
libncurses5_5.9-10_i386
perl-base_5.14.2-21+deb7u1_i386
base-files_7.1wheezy5_amd64
ncurses-bin_5.9-10_amd64
gcc-4.7-base_4.7.2-5_i386
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>aptly mirror edit</title>
      <link>http://www.aptly.info/doc/aptly/mirror/edit</link>
      <pubDate>Fri, 29 Aug 2014 11:17:38 UTC</pubDate>
      <author>Andrey Smirnov</author>
      <guid>http://www.aptly.info/doc/aptly/mirror/edit</guid>
      <description>

&lt;h2 id=&#34;toc_0&#34;&gt;aptly mirror edit&lt;/h2&gt;

&lt;p&gt;Command edit allows to change mirror settings: filter query, whether
to include dependencies while filtering, list of architectures to process.&lt;/p&gt;

&lt;p&gt;Usage:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ aptly mirror edit &amp;lt;name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Params are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;name&lt;/code&gt; is a mirror name (given when mirror was created)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Flags:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-filter=&lt;/code&gt;: &lt;a href=&#34;/doc/feature/query/&#34;&gt;package query&lt;/a&gt; which is applied to
packages in the mirror, set to empty to disable filtering&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-filter-with-deps=false&lt;/code&gt;: when filtering, include dependencies of
matching packages as well&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-architectures=&lt;/code&gt;: global flag to change architectures list.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-with-sources=false&lt;/code&gt;: download source packages in addition to
binary packages&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-with-udebs=false&lt;/code&gt;: download .udeb packages (Debian installer
support)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In order to apply new filtering settings, &lt;a href=&#34;/doc/aptly/mirror/update/&#34;&gt;update&lt;/a&gt;
mirror.&lt;/p&gt;

&lt;p&gt;Examples:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ aptly mirror edit -filter=nginx -filter-with-deps wheezy-main
Mirror [wheezy-main]: http://mirror.yandex.ru/debian/ wheezy successfully updated.

$ aptly mirror edit -architectures=i386,amd64 sensu
Downloading http://repos.sensuapp.org/apt/dists/sensu/Release...
Mirror [sensu]: http://repos.sensuapp.org/apt/ sensu successfully updated.
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>aptly package show</title>
      <link>http://www.aptly.info/doc/aptly/package/show</link>
      <pubDate>Fri, 29 Aug 2014 11:17:38 UTC</pubDate>
      <author>Andrey Smirnov</author>
      <guid>http://www.aptly.info/doc/aptly/package/show</guid>
      <description>

&lt;h2 id=&#34;toc_0&#34;&gt;aptly package show&lt;/h2&gt;

&lt;p&gt;Display details about packages from whole package database. Command
show does searching much like &lt;a href=&#34;/doc/aptly/package/search/&#34;&gt;&lt;code&gt;aptly package search&lt;/code&gt;&lt;/a&gt;
command does, but displays complete information about the package:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;contents of control file&lt;/li&gt;
&lt;li&gt;(optionally) information about package files in the pool&lt;/li&gt;
&lt;li&gt;(optionally) list of mirrors, local repos and snapshots that reference (include) this package&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It is possible to submit any search query to this command, but it is much more common
to have queries resulting in single package.&lt;/p&gt;

&lt;p&gt;Usage:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ aptly package show &amp;lt;package-query&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Params are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;package-query&lt;/code&gt; is a &lt;a href=&#34;/doc/feature/query/&#34;&gt;package query&lt;/a&gt; to
search for packages (most usually in the format of package
reference, e.g. &lt;code&gt;bwbar_1.2.3-2_amd64&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Flags:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-with-files=false&lt;/code&gt;: display list of package files in the package pool&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-with-references=false&lt;/code&gt;: display list of mirrors, snapshots and local repos
which reference this package.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ aptly package show -with-files -with-references bwbar_1.2.3-2_source
Package: bwbar
Version: 1.2.3-2
Priority: source
Section: net
Maintainer: Julien Danjou &amp;lt;acid@debian.org&amp;gt;
Architecture: any
Format: 1.0
Build-Depends: debhelper (&amp;gt;&amp;gt; 7.0.0), libpng12-dev, cdbs
Files: 138ba54405656adc16c882839482795e 54582 bwbar_1.2.3-2.diff.gz
 cd4f216514cf38f42be9d7b35d429adc 1586 bwbar_1.2.3-2.dsc
 766265ddf0615b552ff19d12f78be719 34142 bwbar_1.2.3.orig.tar.gz
Checksums-Sha1: c5259d7fc3ac750d9d9b8d458d702a1bc49a708e 54582 bwbar_1.2.3-2.diff.gz
 674a6f5db91e83f9ad4f30d1563d3249aa21bb39 1586 bwbar_1.2.3-2.dsc
 13f5a17658a5c5adbb0db5b0fdd88805d6b3158b 34142 bwbar_1.2.3.orig.tar.gz
Directory: pool/main/b/bwbar
Binary: bwbar
Standards-Version: 3.9.2
Checksums-Sha256: 1ae625e6a29b745d24bab9185692ecc5b17cb4624d2019ae9a94e08a89f15edb 54582 bwbar_1.2.3-2.diff.gz
 b2d022dd912bc1129b0d0e216b7f8e587649582578484c776bcbe81afe993879 1586 bwbar_1.2.3-2.dsc
 bd8f5079f17b1dec6eae81ddc43c58c49b777b336fd902ffbb8e631885fbb45c 34142 bwbar_1.2.3.orig.tar.gz

Files in the pool:
  /Users/smira/.aptly/pool/13/8b/bwbar_1.2.3-2.diff.gz
  /Users/smira/.aptly/pool/cd/4f/bwbar_1.2.3-2.dsc
  /Users/smira/.aptly/pool/76/62/bwbar_1.2.3.orig.tar.gz

References to package:
  mirror [wheezy-main-src]: http://mirror.yandex.ru/debian/ wheezy [src]
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>aptly mirror search</title>
      <link>http://www.aptly.info/doc/aptly/mirror/search</link>
      <pubDate>Fri, 29 Aug 2014 11:17:38 UTC</pubDate>
      <author>Andrey Smirnov</author>
      <guid>http://www.aptly.info/doc/aptly/mirror/search</guid>
      <description>

&lt;h2 id=&#34;toc_0&#34;&gt;aptly mirror search&lt;/h2&gt;

&lt;p&gt;Search mirror for packages matching query.&lt;/p&gt;

&lt;p&gt;Usage:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ aptly mirror search &amp;lt;name&amp;gt; &amp;lt;package-query&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Params are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;name&lt;/code&gt; is a mirror name (given when mirror was created)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;package-query&lt;/code&gt; is a &lt;a href=&#34;/doc/feature/query/&#34;&gt;package query&lt;/a&gt; to
search for packages&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Flags:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-with-deps=false&lt;/code&gt;: include dependencies of matching packages
into search results&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ aptly mirror search wheezy &#39;Name (% nginx*), $Architecture (i386), !Name (% *-dbg)&#39;
nginx-full_1.2.1-2.2+wheezy2_i386
nginx-extras_1.2.1-2.2+wheezy2_i386
nginx-light_1.2.1-2.2+wheezy2_i386
nginx-common_1.2.1-2.2+wheezy2_all
nginx-doc_1.2.1-2.2+wheezy2_all
nginx-naxsi-ui_1.2.1-2.2+wheezy2_all
nginx_1.2.1-2.2+wheezy2_all
nginx-naxsi_1.2.1-2.2+wheezy2_i386
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>aptly package</title>
      <link>http://www.aptly.info/doc/aptly/package</link>
      <pubDate>Fri, 29 Aug 2014 11:17:38 UTC</pubDate>
      <author>Andrey Smirnov</author>
      <guid>http://www.aptly.info/doc/aptly/package</guid>
      <description>

&lt;h2 id=&#34;toc_0&#34;&gt;aptly package&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;aptly package&lt;/code&gt; family of command perform operation on the whole
collection of packages in apty database.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>aptly publish drop</title>
      <link>http://www.aptly.info/doc/aptly/publish/drop</link>
      <pubDate>Fri, 08 Aug 2014 11:17:38 UTC</pubDate>
      <author>Andrey Smirnov</author>
      <guid>http://www.aptly.info/doc/aptly/publish/drop</guid>
      <description>

&lt;h2 id=&#34;toc_0&#34;&gt;aptly publish drop&lt;/h2&gt;

&lt;p&gt;Remove files belonging to published repository. aptly would try to
remove as many files belonging to this repository as possible. For
example, if no other published repositories share the same prefix, all
files inside prefix would be removed.&lt;/p&gt;

&lt;p&gt;Usage:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ aptly publish drop &amp;lt;distribution&amp;gt; [[&amp;lt;endpoint:&amp;gt;]&amp;lt;prefix&amp;gt;]
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;distribution&lt;/code&gt; is a distribution name for published repository (as
displayed by &lt;code&gt;aptly publish list&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;endpoint&lt;/code&gt; is publishing endpoint, if not specified, it would
default to empty endpoint (local file system).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;prefix&lt;/code&gt; is an optional prefix for publishing, if not specified,
prefix is considered to be &lt;code&gt;.&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ aptly publish drop squeeze-backports
Removing /var/aptly/public/dists/squeeze-backports...
Removing /var/aptly/public/pool/contrib...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt; &lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Integrations</title>
      <link>http://www.aptly.info/doc/integrations</link>
      <pubDate>Fri, 08 Aug 2014 11:17:38 UTC</pubDate>
      <author>Andrey Smirnov</author>
      <guid>http://www.aptly.info/doc/integrations</guid>
      <description>

&lt;h2 id=&#34;toc_0&#34;&gt;Integrations&lt;/h2&gt;

&lt;p&gt;Vagrant:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/sepulworld/aptly-vagrant&#34;&gt;Vagrant configuration&lt;/a&gt; by
Zane Williamson, allowing to bring two virtual servers, one with aptly installed
and another one set up to install packages from repository published by aptly&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With configuration management systems:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hw-cookbooks/aptly&#34;&gt;Chef cookbook&lt;/a&gt; by Aaron Baer
(Heavy Water Operations, LLC)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/alphagov/puppet-aptly&#34;&gt;Puppet module&lt;/a&gt; by
Government Digital Services&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>aptly publish update</title>
      <link>http://www.aptly.info/doc/aptly/publish/update</link>
      <pubDate>Fri, 08 Aug 2014 11:17:38 UTC</pubDate>
      <author>Andrey Smirnov</author>
      <guid>http://www.aptly.info/doc/aptly/publish/update</guid>
      <description>

&lt;h2 id=&#34;toc_0&#34;&gt;aptly publish update&lt;/h2&gt;

&lt;p&gt;Command re-publishes (updates) published local repository.
&lt;code&gt;distribution&lt;/code&gt; and &lt;code&gt;prefix&lt;/code&gt; should be occupied with local repository
published using command &lt;a href=&#34;/doc/aptly/publish/repo/&#34;&gt;&lt;code&gt;aptly publish repo&lt;/code&gt;&lt;/a&gt;.
Update happens in-place with minimum possible downtime for published
repository. Valid &lt;a href=&#34;/doc/aptly/publish/&#34;&gt;GPG key&lt;/a&gt; is required for publishing.&lt;/p&gt;

&lt;p&gt;When published repository is updated, all the options are preserved:
distribution, component, list of architectures, etc.&lt;/p&gt;

&lt;p&gt;Usage:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ aptly publish update &amp;lt;distribution&amp;gt; [[&amp;lt;endpoint:&amp;gt;]&amp;lt;prefix&amp;gt;]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Params:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;distribution&lt;/code&gt; is distribution name of published repository&lt;/li&gt;
&lt;li&gt;&lt;code&gt;endpoint&lt;/code&gt; is publishing endpoint, if not specified, it would
default to empty endpoint (local file system).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;prefix&lt;/code&gt; is publishing prefix, if not specified, it would default to
empty prefix (&lt;code&gt;.&lt;/code&gt;).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Flags:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-force-overwrite=false&lt;/code&gt;: overwrite packages files in the pool even
if content is different (see also &lt;a href=&#34;/doc/feature/duplicate/&#34;&gt;duplicate packages&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-gpg-key=&amp;quot;&amp;quot;&lt;/code&gt;: GPG key ID to use when signing the release, if not
specified default key is used&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-keyring=&amp;quot;&amp;quot;&lt;/code&gt;: GPG keyring to use (instead of default)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-passphrase=&amp;quot;&amp;quot;&lt;/code&gt;: GPG passphrase to unlock private key (possibly insecure)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-passphrase-file=&amp;quot;&amp;quot;&lt;/code&gt;: GPG passphrase file to unlock private key (possibly insecure)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-secret-keyring=&amp;quot;&amp;quot;&lt;/code&gt;: GPG secret keyring to use (instead of default)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-skip-signing=false&lt;/code&gt;: don&amp;rsquo;t sign Release files with GPG&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When updating multiple-component published repository, all local
repositories are updated simultaneously.&lt;/p&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ aptly publish update maverick
Loading packages...
Generating metadata files and linking package files...
Signing file &#39;/var/aptly/public/dists/maverick/Release.tmp&#39; with gpg, please enter your passphrase when prompted:

&amp;lt;&amp;lt;gpg asks for passphrase&amp;gt;&amp;gt;

Clearsigning file &#39;/var/aptly/public/dists/maverick/Release.tmp&#39; with gpg, please enter your passphrase when prompted:

&amp;lt;&amp;lt;gpg asks for passphrase&amp;gt;&amp;gt;

Cleaning up prefix &amp;quot;.&amp;quot; component &amp;quot;main&amp;quot;...

Publish for local repo ./maverick [i386, source] publishes {main: [local-repo]} has been successfully updated.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt; &lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>aptly publish switch</title>
      <link>http://www.aptly.info/doc/aptly/publish/switch</link>
      <pubDate>Fri, 08 Aug 2014 11:17:38 UTC</pubDate>
      <author>Andrey Smirnov</author>
      <guid>http://www.aptly.info/doc/aptly/publish/switch</guid>
      <description>

&lt;h2 id=&#34;toc_0&#34;&gt;aptly publish switch&lt;/h2&gt;

&lt;p&gt;Command switches in-place published repository with new snapshot
contents. &lt;code&gt;distribution&lt;/code&gt; and &lt;code&gt;prefix&lt;/code&gt; should be occupied with snapshot
published using command &lt;a href=&#34;/doc/aptly/publish/snapshot/&#34;&gt;&lt;code&gt;aptly publish snapshot&lt;/code&gt;&lt;/a&gt;. Update happens in-place with minimum
possible downtime for published repository. Valid &lt;a href=&#34;/doc/aptly/publish/&#34;&gt;GPG key&lt;/a&gt;
is required for publishing.&lt;/p&gt;

&lt;p&gt;When published repository is updated, all the options are preserved:
distribution, component, list of architectures, etc.&lt;/p&gt;

&lt;p&gt;Usage:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ aptly publish switch &amp;lt;distribution&amp;gt; [[&amp;lt;endpoint:&amp;gt;]&amp;lt;prefix&amp;gt;] &amp;lt;new-snapshot&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Params:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;distribution&lt;/code&gt; is distribution name of published repository&lt;/li&gt;
&lt;li&gt;&lt;code&gt;endpoint&lt;/code&gt; is publishing endpoint, if not specified, it would
default to empty endpoint (local file system).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;prefix&lt;/code&gt; is publishing prefix, if not specified, it would default to
empty prefix (&lt;code&gt;.&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;new-snapshot&lt;/code&gt; is a snapshot name that snould be re-published&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Flags:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-component=&amp;quot;&amp;quot;&lt;/code&gt;: list of components to update (separate components
with commas)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-force-overwrite=false&lt;/code&gt;: overwrite packages files in the pool even
if content is different (see also &lt;a href=&#34;/doc/feature/duplicate/&#34;&gt;duplicate packages&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-gpg-key=&amp;quot;&amp;quot;&lt;/code&gt;: GPG key ID to use when signing the release, if not
specified default key is used&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-keyring=&amp;quot;&amp;quot;&lt;/code&gt;: GPG keyring to use (instead of default)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-passphrase=&amp;quot;&amp;quot;&lt;/code&gt;: GPG passphrase to unlock private key (possibly insecure)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-passphrase-file=&amp;quot;&amp;quot;&lt;/code&gt;: GPG passphrase file to unlock private key (possibly insecure)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-secret-keyring=&amp;quot;&amp;quot;&lt;/code&gt;: GPG secret keyring to use (instead of default)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-skip-signing=false&lt;/code&gt;: don&amp;rsquo;t sign Release files with GPG&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When switching published snapshots for multiple component repositories
any subset of snapshots could be updated, they should be listed on
command line with &lt;code&gt;-component&lt;/code&gt; flag:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ aptly publish switch -component=main,contrib wheezy wheezy-main wheezy-contrib
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Flag &lt;code&gt;-component&lt;/code&gt; could be omitted for single-component published
repositories.&lt;/p&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ aptly publish switch wheezy wheezy-7.4
Loading packages...
Generating metadata files and linking package files...
Signing file &#39;/var/aptly/public/dists/wheezy/Release.tmp&#39; with gpg, please enter your passphrase when prompted:

&amp;lt;&amp;lt;gpg asks for passphrase&amp;gt;&amp;gt;

Clearsigning file &#39;/var/aptly/public/dists/wheezy/Release.tmp&#39; with gpg, please enter your passphrase when prompted:

&amp;lt;&amp;lt;gpg asks for passphrase&amp;gt;&amp;gt;

Cleaning up prefix &amp;quot;.&amp;quot; component &amp;quot;main&amp;quot;...

Publish for local repo ./wheezy [i386, amd64] publishes {main: [wheezy-7.4]: snapshot from mirror [wheezy]: http://ftp.ru.debian.org/debian/ wheezy} has been successfully updated.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt; &lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Why aptly?</title>
      <link>http://www.aptly.info/doc/why</link>
      <pubDate>Fri, 08 Aug 2014 11:17:38 UTC</pubDate>
      <author>Andrey Smirnov</author>
      <guid>http://www.aptly.info/doc/why</guid>
      <description>

&lt;h2 id=&#34;toc_0&#34;&gt;Why aptly?&lt;/h2&gt;

&lt;p&gt;A Linux distribution is a well-tested collection of packages that are carefully organized and
supported by the vendor. There&amp;rsquo;s support for the released version, including
updates, security fixes, etc. For many of us that is just enough.&lt;/p&gt;

&lt;p&gt;But sooner or later our requirements start to evolve:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;we have a lot of machines and we would like to have an internal mirror
of a package repository, so that we can save bandwidth and manage
upgrades;&lt;/li&gt;
&lt;li&gt;some packages are missing in the official distribution or are outdated,
so we need to add 3rd party repositories;&lt;/li&gt;
&lt;li&gt;we start packaging our own software (or modified versions of official
packages), so we need to host our own internal package repository.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the end, we would like &lt;strong&gt;to own a package repository&lt;/strong&gt;, that is to have
a package repository that is our &amp;ldquo;own distribution&amp;rdquo; tailored to fit our
needs. Relying on single vendor is fine, but if we start to manage our
own repository, we need great tools to help us. That&amp;rsquo;s where aptly comes to help us.&lt;/p&gt;

&lt;h3 id=&#34;toc_1&#34;&gt;Mirroring remote repositories&lt;/h3&gt;

&lt;p&gt;Creating our own mirror of remote repositories has several benefits:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;saving bandwidth if we have a lot of servers;&lt;/li&gt;
&lt;li&gt;no dependencies on remote services to work properly in order to manage
critical pieces of infrastructure;&lt;/li&gt;
&lt;li&gt;reproducible package installation.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Last point requires some comments: if I setup a server (install packages) by issuing
fixed set of &lt;code&gt;apt-get install package&lt;/code&gt; commands, I get some package versions installed.
If later I issue exactly the same &lt;code&gt;apt-get install package&lt;/code&gt; commands on the second
server, I might get a slightly different set of package versions, as the remote repository
might have been updated in the mean time.&lt;/p&gt;

&lt;p&gt;There are many tools to create a mirror of the Debian package repositories, but many of those tools
are able to create partial mirrors (download only specified packages) and most
important, there are just several tools that can update mirror at any moment in time and preserve previous
mirror states as snapshots.&lt;/p&gt;

&lt;p&gt;Mirror snapshotting is very important to make sure that all servers are installed from the same
snapshot. When tested carefully, mirror could be upgraded to the new snapshot.&lt;/p&gt;

&lt;p&gt;Using aptly, you can do something like that:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ aptly mirror create wheezy-main http://mirror.yandex.ru/debian/ wheezy main
$ aptly mirror update wheezy-main
$ aptly snapshot create wheezy-main-2014-08-16 from mirror wheezy-main
$ aptly publish snapshot wheezy-main-2014-08-16
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Your servers are configured to download packages from your own mirror.
As a Debian distribution is updated, we can take a new snapshot and update a published repository:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ aptly mirror update wheezy-main
$ aptly snapshot create wheezy-main-2014-09-02 from mirror wheezy-main
$ aptly publish switch wheezy wheezy-main-2014-09-02
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Please see &lt;a href=&#34;/tutorial/mirror/&#34;&gt;mirroring tutorial&lt;/a&gt; for more details.&lt;/p&gt;

&lt;h3 id=&#34;toc_2&#34;&gt;Mixing different packages sources&lt;/h3&gt;

&lt;p&gt;One can configure &lt;code&gt;apt&lt;/code&gt; to use multiple package sources via &lt;code&gt;apt.sources.list&lt;/code&gt;. This works just fine
until you get conflicts (one package coming from different sources). You might use apt pinning
to control package source priority, but this is hard to maintain and doesn&amp;rsquo;t guarantee consistent
results.&lt;/p&gt;

&lt;p&gt;Reasons to use multiple sources might be different:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;updating some packages to newer versions from &lt;code&gt;backports&lt;/code&gt; repository;&lt;/li&gt;
&lt;li&gt;using 3rd party repositories because:

&lt;ul&gt;
&lt;li&gt;they have newer versions of software available;&lt;/li&gt;
&lt;li&gt;software is not included into Debian distribution.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;installing internal software from Debian packages.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Most usually we would like to add some software from 3rd party repositories into official repository,
create our own &amp;ldquo;mix&amp;rdquo;, which should be consistent, tested and available in the same state to all servers.&lt;/p&gt;

&lt;p&gt;Once the state of mirrors and our internal package repositories is fixed using snapshots, we might
use &lt;a href=&#34;/doc/aptly/snapshot/pull&#34;&gt;aptly snapshot pull&lt;/a&gt; to mix packages from several snapshots into a final
snapshot that could be published to be consumed from our servers. aptly would take care of dependencies,
replacing conflicting packages when required. Please see &lt;a href=&#34;/tutorial/pull/&#34;&gt;tutorial&lt;/a&gt; for how to pull
the &lt;code&gt;nginx&lt;/code&gt; package from backports.&lt;/p&gt;

&lt;h3 id=&#34;toc_3&#34;&gt;Managing internal package repositories&lt;/h3&gt;

&lt;p&gt;Sometimes we produce our own packages: it could be our own software or a patched version of official
packages. Historically tools to create package repositories were complex and required complex
setup. aptly makes things different: managing local repositories is easy, they could be
snapshotted as remote repositories, packages from local repositories could be mixed with packages
from mirrors (in snapshots).&lt;/p&gt;

&lt;p&gt;Local repositories could be published either via snapshots or directly (loosing flexibility of
snapshots). Please see &lt;a href=&#34;/doc/aptly/repo/&#34;&gt;&lt;code&gt;aptly repo&lt;/code&gt;&lt;/a&gt; commands for examples.&lt;/p&gt;

&lt;p&gt;More examples on local repository management in &lt;a href=&#34;/tutorial/repo/&#34;&gt;tutorial&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>aptly repo show</title>
      <link>http://www.aptly.info/doc/aptly/repo/show</link>
      <pubDate>Fri, 08 Aug 2014 11:17:38 UTC</pubDate>
      <author>Andrey Smirnov</author>
      <guid>http://www.aptly.info/doc/aptly/repo/show</guid>
      <description>

&lt;h2 id=&#34;toc_0&#34;&gt;aptly repo show&lt;/h2&gt;

&lt;p&gt;Commands show displays information about local repository, possibly
listing all packages in the repository.&lt;/p&gt;

&lt;p&gt;Usage:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$  aptly repo show &amp;lt;name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Params are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;name&lt;/code&gt; local repository name&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Flags:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-with-packages=false&lt;/code&gt;: show detailed list of packages and versions
stored in the mirror&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ aptly repo show -with-packages stable
Name: stable
Comment: Stable packages for project Foo
Default Distribution: wheezy
Default Component: main
Number of packages: 10
Packages:
  libmysqlclient18_5.5.35-rel33.0-611.squeeze_amd64
  percona-server-client-5.5_5.5.35-rel33.0-611.squeeze_amd64
  percona-server-common-5.5_5.5.35-rel33.0-611.squeeze_amd64
  percona-server-server_5.5.35-rel33.0-611.squeeze_amd64
  percona-server-server-5.5_5.5.35-rel33.0-611.squeeze_amd64
  libmysqlclient18_5.5.35-rel33.0-611.squeeze_i386
  percona-server-client-5.5_5.5.35-rel33.0-611.squeeze_i386
  percona-server-common-5.5_5.5.35-rel33.0-611.squeeze_i386
  percona-server-server_5.5.35-rel33.0-611.squeeze_i386
  percona-server-server-5.5_5.5.35-rel33.0-611.squeeze_i386
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>aptly snapshot show</title>
      <link>http://www.aptly.info/doc/aptly/snapshot/show</link>
      <pubDate>Fri, 08 Aug 2014 11:17:38 UTC</pubDate>
      <author>Andrey Smirnov</author>
      <guid>http://www.aptly.info/doc/aptly/snapshot/show</guid>
      <description>

&lt;h2 id=&#34;toc_0&#34;&gt;aptly snapshot show&lt;/h2&gt;

&lt;p&gt;Shows detailed information about snapshot. Full list of packages in the
snapshot could be displayed as well.&lt;/p&gt;

&lt;p&gt;Usage:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ aptly snapshot show &amp;lt;name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Params:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;name&lt;/code&gt; is snapshot name which has been given during snapshot
creation&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Flags:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-with-packages=false&lt;/code&gt;: show detailed list of packages and versions
stored in the mirror&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ aptly snapshot show back
Name: back
Created At: 2013-12-24 15:39:29 MSK
Description: Snapshot from mirror [backports2]: http://mirror.yandex.ru/backports.org/ squeeze-backports
Number of packages: 3898
Packages:
  altos-1.0.3~bpo60+1_i386
  amanda-client-1:3.3.1-3~bpo60+1_amd64
  ...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt; &lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>aptly snapshot filter</title>
      <link>http://www.aptly.info/doc/aptly/snapshot/filter</link>
      <pubDate>Fri, 08 Aug 2014 11:17:38 UTC</pubDate>
      <author>Andrey Smirnov</author>
      <guid>http://www.aptly.info/doc/aptly/snapshot/filter</guid>
      <description>

&lt;h2 id=&#34;toc_0&#34;&gt;aptly snapshot filter&lt;/h2&gt;

&lt;p&gt;Applies filter to contents of snapshot &lt;code&gt;source&lt;/code&gt; producing &lt;code&gt;destination&lt;/code&gt;
snapshot. All packages from &lt;code&gt;source&lt;/code&gt; snapshot matching any of the package
queries (optionally with all their dependencies from &lt;code&gt;source&lt;/code&gt;)  are used
to build new snapshot &lt;code&gt;destination&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Usage:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ aptly snapshot filter &amp;lt;source&amp;gt; &amp;lt;destination&amp;gt; &amp;lt;package-query&amp;gt; ...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Params:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;source&lt;/code&gt; is a snapshot name where packages would be
searched&lt;/li&gt;
&lt;li&gt;&lt;code&gt;destination&lt;/code&gt; is a name of the snapshot that would be created&lt;/li&gt;
&lt;li&gt;&lt;code&gt;package-query&lt;/code&gt; is a list of &lt;a href=&#34;/doc/feature/query/&#34;&gt;package queries&lt;/a&gt;, in
the simplest form, name of package to be pulled from &lt;code&gt;source&lt;/code&gt; could
be specified&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Flags:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-with-deps=false&lt;/code&gt;: include dependencies of matching packages&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Filter command is almost identical to
&lt;code&gt;aptly snapshot pull empty source destination query&lt;/code&gt; (&lt;code&gt;empty&lt;/code&gt; being empty
snapshot), the differences are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;pull by default includes only first matching package&lt;/li&gt;
&lt;li&gt;pull honors &lt;code&gt;-architectures&lt;/code&gt; flag and would pull only packages with
mentioned architectures, while filter command would use package
query as given to match packages (one might use &lt;code&gt;$Architecture (i386)&lt;/code&gt; in query
to limit architectures)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ aptly snapshot filter wheezy-main wheezy-main-required &#39;Priority (required)&#39;
Loading packages (31661)...
Building indexes...

Snapshot wheezy-main-required successfully filtered.
You can run &#39;aptly publish snapshot wheezy-main-required&#39; to publish snapshot as Debian repository.
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>